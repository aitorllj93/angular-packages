{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/ui/ui.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,GAAG,EAAE,CAAC,wMAAmC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;KACnF;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAgBnC,MAAM,YAAY;IAdzB;QAeE,UAAK,GAAG,kBAAkB,CAAC;KAC5B;;wEAFY,YAAY;4FAAZ,YAAY;QAXrB,qFACE;QAAA,sFACE;QAAA,wFAC0B;QAC5B,4DAAsB;QACxB,4DAAkB;QAClB,4EACE;QAAA,2EAA+B;QACjC,4DAAM;;;QARiB,8EAA6B;QAEgB,0DAAe;QAAf,4EAAe;;6FAS1E,YAAY;cAdxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;;;;;;GAUT;aACF;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACL;AACc;AACT;;;AAgBxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,sDAAQ;YACR,4DAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;SAC7B;mIAIU,SAAS,mBAZlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,sDAAQ;6FAMC,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,sDAAQ;oBACR,4DAAgB,CAAC,OAAO,CAAC,EAAE,CAAC;iBAC7B;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACW;AACA;AACJ;AACA;AACA;AACY;AACV;AACT;;AAgBxC,MAAM,QAAQ;;uFAAR,QAAQ;0IAAR,QAAQ,kBAXjB,4DAAY;QACZ,uEAAe;QACf,uEAAe;QACf,mEAAa;QACb,+EAAkB;QAClB,mEAAa;QACb,mEAAa;QACb,qEAAc;QACd,4DAAgB;mIAGP,QAAQ,cAXjB,4DAAY;QACZ,uEAAe;QACf,uEAAe;QACf,mEAAa;QACb,+EAAkB;QAClB,mEAAa;QACb,mEAAa;QACb,qEAAc;QACd,4DAAgB;6FAGP,QAAQ;cAbpB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,uEAAe;oBACf,uEAAe;oBACf,mEAAa;oBACb,+EAAkB;oBAClB,mEAAa;oBACb,mEAAa;oBACb,qEAAc;oBACd,4DAAgB;iBACjB;aACF;;;;;;;;;;;;;;ACzBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: () => import('./packages/package.module').then(m => m.PackageModule)\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <mdc-top-app-bar fixed [scrollTarget]=\"fixedContent\">\n      <mdc-top-app-bar-row>\n        <mdc-top-app-bar-section style=\"cursor: pointer;\" align=\"start\" [title]=\"title\" [routerLink]=\"['home']\">\n        </mdc-top-app-bar-section>\n      </mdc-top-app-bar-row>\n    </mdc-top-app-bar>\n    <div class=\"app-bar-content\" #fixedContent>\n      <router-outlet></router-outlet>\n    </div>\n  `\n})\nexport class AppComponent {\n  title = 'Angular Packages';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UIModule } from './ui/ui.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    UIModule,\n    NgxLoadingModule.forRoot({}),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MdcRippleModule } from '@angular-mdc/web/ripple';\nimport { MdcButtonModule } from '@angular-mdc/web/button';\nimport { MdcIconModule } from '@angular-mdc/web/icon';\nimport { MdcCardModule } from '@angular-mdc/web/card';\nimport { MdcListModule } from '@angular-mdc/web/list';\nimport { MdcTopAppBarModule } from '@angular-mdc/web/top-app-bar';\nimport { MdcChipsModule } from '@angular-mdc/web/chips';\nimport { NgxLoadingModule } from 'ngx-loading';\n\n\n@NgModule({\n  exports: [\n    CommonModule,\n    MdcRippleModule,\n    MdcButtonModule,\n    MdcIconModule,\n    MdcTopAppBarModule,\n    MdcCardModule,\n    MdcListModule,\n    MdcChipsModule,\n    NgxLoadingModule\n  ]\n})\nexport class UIModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}