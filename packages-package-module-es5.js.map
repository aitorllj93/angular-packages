{"version":3,"sources":["webpack:///src/app/packages/package-detail.container.ts","webpack:///src/app/packages/package-header.component.ts","webpack:///src/app/packages/package-list.component.ts","webpack:///src/app/packages/package-list.container.ts","webpack:///src/app/packages/package.module.ts","webpack:///src/app/packages/package.service.ts"],"names":["PackageDetailContainerComponent","service","route","loading","pkg$","readme$","params","pipe","findByName","name","pkg","next","fetchReadme","readme","subscribe","selector","template","PackageHeaderComponent","pkgClick","PackageListComponent","PackageListContainerComponent","router","pkgs$","fetchAll","result","navigate","owner","onPkgClick","PackageModule","forChild","path","component","imports","exports","declarations","providers","PackageService","http","get","items","find","item","repo","responseType","providedIn"],"mappings":"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","file":"packages-package-module-es5.js","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { PackageService } from './package.service';\nimport { Package } from './package.model';\n\n@Component({\n  selector: 'app-package-detail-container',\n  template: `\n    <div class=\"home-container\">\n      <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '3px' }\"></ngx-loading>\n      <mdc-card class=\"demo-card\" style=\"margin-bottom: 40px;\" outlined>\n        <mdc-ripple class=\"demo-card-article\">\n          <app-package-header [pkg]=\"pkg$ | async\"></app-package-header>\n        </mdc-ripple>\n      </mdc-card>\n      <div class=\"markdown-body\" [innerHtml]=\"readme$ | async\"></div>\n    </div>\n  `\n})\n\nexport class PackageDetailContainerComponent implements OnInit {\n\n  loading = false;\n\n  pkg$ = new BehaviorSubject<Package>(null);\n  readme$ = new BehaviorSubject('');\n\n  constructor(\n    private service: PackageService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.params.pipe(\n      switchMap(params => this.service.findByName(params.name)),\n      tap(pkg => this.pkg$.next(pkg)),\n      switchMap(pkg => this.service.fetchReadme(pkg)),\n      tap(readme => this.readme$.next(readme)),\n    ).subscribe(() => this.loading = false);\n  }\n}\n","\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Package } from './package.model';\n\n@Component({\n  selector: 'app-package-header',\n  template: `\n    <h2 class=\"demo-card-article__title\" mdcHeadline5>{{ pkg.name }}</h2>\n    <p class=\"demo-card-article__snippet\" mdcBody2>\n      {{ pkg.description }}\n    </p>\n    <mdc-chip-set>\n      <mdc-chip *ngFor=\"let tag of pkg.tags\">\n        <mdc-chip-text>{{ tag }}</mdc-chip-text>\n      </mdc-chip>\n    </mdc-chip-set>\n  `\n})\n\nexport class PackageHeaderComponent implements OnInit {\n\n  @Input() pkg: Package;\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Package } from './package.model';\n\n@Component({\n  selector: 'app-package-list',\n  template: `\n    <mdc-card class=\"demo-card\" outlined>\n      <ng-container *ngFor=\"let pkg of pkgs\">\n        <mdc-ripple class=\"demo-card-article\"\n          (click)=\"pkgClick.emit(pkg)\">\n          <app-package-header [pkg]=\"pkg\"></app-package-header>\n        </mdc-ripple>\n        <mdc-list-divider></mdc-list-divider>\n      </ng-container>\n    </mdc-card>\n  `\n})\n\nexport class PackageListComponent implements OnInit {\n\n  @Input() pkgs: Package[];\n\n  @Output() pkgClick = new EventEmitter<Package>();\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Package } from './package.model';\nimport { PackageService } from './package.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-package-list-container',\n  template: `\n    <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '3px' }\"></ngx-loading>\n    <div class=\"home-container\">\n\n      <a href=\"https://github.com/d3v0ps/ngx-store/issues\" target=\"blank\" style=\"text-decoration: none; color: #69511e !important;\">\n        <mdc-card class=\"demo-card\" style=\"margin-bottom: 20px; background: #EAB543;\" outlined>\n          <mdc-ripple class=\"demo-card-article\">\n            Send me more packages\n          </mdc-ripple>\n        </mdc-card>\n      </a>\n\n      <app-package-list [pkgs]=\"pkgs$ | async\"\n        (pkgClick)=\"onPkgClick($event)\">\n      </app-package-list>\n    </div>\n  `\n})\n\nexport class PackageListContainerComponent implements OnInit {\n\n  loading = false;\n\n  pkgs$ = new BehaviorSubject<Package[]>([]);\n\n  constructor(\n    private service: PackageService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.service.fetchAll()\n    .pipe(\n      tap(result => this.pkgs$.next(result))\n    )\n    .subscribe(() => this.loading = false);\n  }\n\n  onPkgClick(pkg: Package) {\n    this.router.navigate(['home', pkg.owner, pkg.name]);\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { PackageHeaderComponent } from './package-header.component';\nimport { PackageListComponent } from './package-list.component';\nimport { PackageListContainerComponent } from './package-list.container';\nimport { PackageDetailContainerComponent } from './package-detail.container';\n\n@NgModule({\n  imports: [\n    UIModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: PackageListContainerComponent\n      },\n      {\n        path: ':owner/:name',\n        component: PackageDetailContainerComponent\n      }\n    ])\n  ],\n  exports: [\n    RouterModule,\n  ],\n  declarations: [\n    PackageHeaderComponent,\n    PackageListComponent,\n    PackageListContainerComponent,\n    PackageDetailContainerComponent,\n  ],\n  providers: [],\n})\nexport class PackageModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\nimport { Package } from './package.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PackageService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  fetchAll() {\n    return this.http.get<Package[]>('assets/data/components.json');\n  }\n\n  findByName(name: string) {\n    return this.fetchAll().pipe(\n      map(items => items.find(item => item.name === name))\n    );\n  }\n\n  fetchReadme(pkg: Package) {\n    return this.http.get<string>(\n      `https://get-github-readme-v2.now.sh/${pkg.owner}/${pkg.repo}?branch=master`,\n      {\n        responseType: 'text' as 'json'\n      }\n    );\n  }\n\n}\n"]}