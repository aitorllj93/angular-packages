{"version":3,"sources":["webpack:///src/app/packages/package-detail.container.ts","webpack:///src/app/packages/package-header.component.ts","webpack:///src/app/packages/package-list.component.ts","webpack:///src/app/packages/package-list.container.ts","webpack:///src/app/packages/package.module.ts","webpack:///src/app/packages/package.service.ts"],"names":["PackageDetailContainerComponent","service","route","loading","pkg$","readme$","params","pipe","findByName","name","pkg","next","fetchReadme","readme","subscribe","event","value","stopPropagation","window","open","owner","repo","url","selector","template","PackageHeaderComponent","githubClick","homepageClick","pkgClick","PackageListComponent","PackageListContainerComponent","router","pkgs$","tags$","filteredPkgs$","filterText","filterTags","fetchAll","result","fetchTags","tags","onFilterChange","navigate","filter","matchesTags","length","some","tag","includes","matchesText","toLowerCase","description","onPkgClick","onGithubClick","onHomepageClick","PackageModule","forChild","path","component","imports","exports","declarations","providers","PackageService","http","cache","get","items","Set","reduce","item","concat","find","responseType","providedIn"],"mappings":"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","file":"packages-package-module-es5.js","sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { PackageService } from './package.service';\nimport { Package } from './package.model';\n\n@Component({\n  selector: 'app-package-detail-container',\n  template: `\n    <div class=\"home-container\">\n      <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '3px' }\"></ngx-loading>\n      <mdc-card class=\"demo-card\" style=\"margin-bottom: 40px;\" outlined>\n        <mdc-ripple class=\"demo-card-article\">\n          <app-package-header *ngIf=\"pkg$ | async as pkg\" [pkg]=\"pkg\"\n            (githubClick)=\"onGithubClick($event)\"\n            (homepageClick)=\"onHomepageClick($event)\"></app-package-header>\n        </mdc-ripple>\n      </mdc-card>\n      <div class=\"markdown-body\" [innerHtml]=\"readme$ | async\"></div>\n    </div>\n  `\n})\n\nexport class PackageDetailContainerComponent implements OnInit {\n\n  loading = false;\n\n  pkg$ = new BehaviorSubject<Package>(null);\n  readme$ = new BehaviorSubject('');\n\n  constructor(\n    private service: PackageService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.route.params.pipe(\n      switchMap(params => this.service.findByName(params.name)),\n      tap(pkg => this.pkg$.next(pkg)),\n      switchMap(pkg => this.service.fetchReadme(pkg)),\n      tap(readme => this.readme$.next(readme)),\n    ).subscribe(() => this.loading = false);\n  }\n\n  onGithubClick(event: MouseEvent) {\n    const pkg = this.pkg$.value;\n    event.stopPropagation();\n    window.open(`https://github.com/${pkg.owner}/${pkg.repo}`, '_blank');\n  }\n\n  onHomepageClick(event: MouseEvent) {\n    const pkg = this.pkg$.value;\n    event.stopPropagation();\n    window.open(pkg.url, '_blank');\n  }\n}\n","\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Package } from './package.model';\n\n@Component({\n  selector: 'app-package-header',\n  template: `\n    <h2 class=\"demo-card-article__title\" mdcHeadline5>\n      <i class=\"circle-icon\" [ngClass]=\"{\n        'circle-component': pkg.category === 'Component',\n        'circle-ui': pkg.category === 'UI Kit',\n        'circle-sp': pkg.category === 'Service Provider'\n      }\"></i>\n      {{ pkg.name }}\n      <mdc-icon fontSet=\"mdi\" fontIcon=\"mdi-github\" style=\"cursor:pointer\"\n        (click)=\"githubClick.emit($event)\"></mdc-icon>\n      <mdc-icon fontSet=\"mdi\" fontIcon=\"mdi-home\" style=\"cursor:pointer\"\n        (click)=\"homepageClick.emit($event)\"></mdc-icon>\n    </h2>\n\n    <p class=\"demo-card-article__snippet\" mdcBody2>\n      {{ pkg.description }}\n    </p>\n    <mdc-chip-set>\n      <mdc-chip *ngFor=\"let tag of pkg.tags\">\n        <mdc-chip-text>{{ tag }}</mdc-chip-text>\n      </mdc-chip>\n    </mdc-chip-set>\n  `\n})\n\nexport class PackageHeaderComponent implements OnInit {\n\n  @Output() githubClick = new EventEmitter();\n  @Output() homepageClick = new EventEmitter();\n\n  @Input() pkg: Package;\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Package } from './package.model';\n\n@Component({\n  selector: 'app-package-list',\n  template: `\n    <mdc-card class=\"demo-card\" outlined>\n      <ng-container *ngFor=\"let pkg of pkgs\">\n        <mdc-ripple class=\"demo-card-article\"\n          (click)=\"pkgClick.emit(pkg)\">\n          <app-package-header [pkg]=\"pkg\"\n            (githubClick)=\"githubClick.emit({ event: $event, pkg: pkg })\"\n            (homepageClick)=\"homepageClick.emit({ event: $event, pkg: pkg })\">\n          </app-package-header>\n        </mdc-ripple>\n        <mdc-list-divider></mdc-list-divider>\n      </ng-container>\n    </mdc-card>\n  `\n})\n\nexport class PackageListComponent implements OnInit {\n\n  @Input() pkgs: Package[];\n\n  @Output() pkgClick = new EventEmitter<Package>();\n  @Output() githubClick = new EventEmitter<{ event: MouseEvent, pkg: Package }>();\n  @Output() homepageClick = new EventEmitter<{ event: MouseEvent, pkg: Package }>();\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Package } from './package.model';\nimport { PackageService } from './package.service';\nimport { tap, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-package-list-container',\n  template: `\n    <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '3px' }\"></ngx-loading>\n    <div class=\"home-container\">\n\n      <div fxLayout=\"row\"\n            fxLayout.xs=\"column\"\n            fxFlexFill >\n\n        <div fxFlex=\"50\">\n        <mdc-text-field label=\"Text\" fullwidth\n          [(ngModel)]=\"filterText\"\n          (ngModelChange)=\"onFilterChange()\"></mdc-text-field>\n        </div>\n        <div fxFlex=\"50\">\n          <ng-select\n            [items]=\"tags$ | async\"\n            [multiple]=\"true\"\n            [closeOnSelect]=\"false\"\n            [searchable]=\"true\"\n            placeholder=\"Select tags\"\n            [(ngModel)]=\"filterTags\"\n            (ngModelChange)=\"onFilterChange()\">\n            <ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\n              <div class=\"ng-value\" *ngFor=\"let item of items | slice:0:2\">\n                <span class=\"ng-value-label\">{{item}}</span>\n                <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n              </div>\n              <div class=\"ng-value\" *ngIf=\"items.length > 2\">\n                <span class=\"ng-value-label\">{{items.length - 2}} more...</span>\n              </div>\n            </ng-template>\n          </ng-select>\n        </div>\n\n      </div>\n\n      <a href=\"https://github.com/d3v0ps/angular-packages/issues\" target=\"blank\" style=\"text-decoration: none; color: #69511e !important;\">\n        <mdc-card class=\"demo-card\" style=\"margin-bottom: 20px; background: #EAB543;\" outlined>\n          <mdc-ripple class=\"demo-card-article\">\n            Send me more packages\n          </mdc-ripple>\n        </mdc-card>\n      </a>\n\n      <app-package-list [pkgs]=\"filteredPkgs$ | async\"\n        (pkgClick)=\"onPkgClick($event)\"\n        (githubClick)=\"onGithubClick($event)\"\n        (homepageClick)=\"onHomepageClick($event)\">\n      </app-package-list>\n    </div>\n  `\n})\n\nexport class PackageListContainerComponent implements OnInit {\n\n  loading = false;\n\n  pkgs$ = new BehaviorSubject<Package[]>([]);\n  tags$ = new BehaviorSubject<string[]>([]);\n  filteredPkgs$ = new BehaviorSubject<Package[]>([]);\n\n  filterText = '';\n  filterTags = [];\n\n  constructor(\n    private service: PackageService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.service.fetchAll()\n    .pipe(\n      tap(result => this.pkgs$.next(result)),\n      switchMap(() => this.service.fetchTags()),\n      tap(tags => {\n        this.tags$.next(tags);\n        this.onFilterChange();\n      })\n    )\n    .subscribe(() => this.loading = false);\n  }\n\n  onPkgClick(pkg: Package) {\n    this.router.navigate(['home', pkg.owner, pkg.name]);\n  }\n\n  onGithubClick({ event, pkg}: { event: MouseEvent, pkg: Package }) {\n    event.stopPropagation();\n    window.open(`https://github.com/${pkg.owner}/${pkg.repo}`, '_blank');\n  }\n\n  onHomepageClick({ event, pkg}: { event: MouseEvent, pkg: Package }) {\n    event.stopPropagation();\n    window.open(pkg.url, '_blank');\n  }\n\n  onFilterChange() {\n    this.filteredPkgs$.next(this.pkgs$.value.filter(\n      pkg => {\n        const matchesTags = this.filterTags.length <= 0 || pkg.tags.some(\n          tag => this.filterTags.includes(tag)\n        );\n\n        const matchesText = pkg.name.toLowerCase().includes(this.filterText.toLowerCase()) ||\n          pkg.description.toLowerCase().includes(this.filterText.toLowerCase());\n\n        return matchesTags && matchesText;\n      }\n    ));\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\nimport { PackageHeaderComponent } from './package-header.component';\nimport { PackageListComponent } from './package-list.component';\nimport { PackageListContainerComponent } from './package-list.container';\nimport { PackageDetailContainerComponent } from './package-detail.container';\n\n@NgModule({\n  imports: [\n    UIModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: PackageListContainerComponent\n      },\n      {\n        path: ':owner/:name',\n        component: PackageDetailContainerComponent\n      }\n    ])\n  ],\n  exports: [\n    RouterModule,\n  ],\n  declarations: [\n    PackageHeaderComponent,\n    PackageListComponent,\n    PackageListContainerComponent,\n    PackageDetailContainerComponent,\n  ],\n  providers: [],\n})\nexport class PackageModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\n\nimport { Package } from './package.model';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PackageService {\n\n  private cache: Array<Package> = null;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  fetchAll() {\n    if (this.cache) {\n      return of(this.cache);\n    }\n\n    return this.http.get<Package[]>('assets/data/components.json')\n      .pipe(\n        tap(items => this.cache = items)\n      );\n  }\n\n  fetchTags() {\n    return this.fetchAll()\n      .pipe(\n        map(items => [...new Set(items.reduce(\n          (result, item) => result.concat(item.tags),\n          []\n        ))])\n      );\n  }\n\n  findByName(name: string) {\n    return this.fetchAll().pipe(\n      map(items => items.find(item => item.name === name))\n    );\n  }\n\n  fetchReadme(pkg: Package) {\n    return this.http.get<string>(\n      `https://get-github-readme-v2.now.sh/${pkg.owner}/${pkg.repo}?branch=master`,\n      {\n        responseType: 'text' as 'json'\n      }\n    );\n  }\n\n}\n"]}